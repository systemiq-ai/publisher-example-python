# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: observer.proto
# Protobuf Python Version: 6.31.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    0,
    '',
    'observer.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0eobserver.proto\x12\x06protos\"\x9b\x01\n\x12ObservationRequest\x12\x0c\n\x04\x64\x61ta\x18\x01 \x03(\t\x12\x11\n\tindicator\x18\x02 \x01(\t\x12\x17\n\nelement_id\x18\x03 \x01(\x05H\x00\x88\x01\x01\x12\x12\n\x05token\x18\x04 \x01(\tH\x01\x88\x01\x01\x12\x13\n\x06\x61\x63tion\x18\x05 \x01(\tH\x02\x88\x01\x01\x42\r\n\x0b_element_idB\x08\n\x06_tokenB\t\n\x07_action\"%\n\x13ObservationResponse\x12\x0e\n\x06status\x18\x01 \x01(\t2V\n\x0c\x44\x61taObserver\x12\x46\n\x0bObserveData\x12\x1a.protos.ObservationRequest\x1a\x1b.protos.ObservationResponseB\x14Z\x12systemiq.ai/protosb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'observer_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'Z\022systemiq.ai/protos'
  _globals['_OBSERVATIONREQUEST']._serialized_start=27
  _globals['_OBSERVATIONREQUEST']._serialized_end=182
  _globals['_OBSERVATIONRESPONSE']._serialized_start=184
  _globals['_OBSERVATIONRESPONSE']._serialized_end=221
  _globals['_DATAOBSERVER']._serialized_start=223
  _globals['_DATAOBSERVER']._serialized_end=309
# @@protoc_insertion_point(module_scope)
